import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class HeapBuilder {

    private List<Integer> data;
    private List<Pair<Integer, Integer>> swaps;

    public HeapBuilder() {
        this.data = new ArrayList<>();
        this.swaps = new ArrayList<>();
    }

    public void readData() {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        for (int i = 0; i < n; i++) {
            data.add(scanner.nextInt());
        }
    }

    public void generateSwaps() {
        swaps.clear();
        for (int i = data.size() / 2; i >= 0; i--) {
            shiftDown(i);
        }
    }

    private void shiftDown(int i) {
        int minIndex = i;
        int left = 2 * i + 1;
        if (left < data.size() && data.get(left) < data.get(minIndex)) {
            minIndex = left;
        }
        int right = 2 * i + 2;
        if (right < data.size() && data.get(right) < data.get(minIndex)) {
            minIndex = right;
        }
        if (minIndex != i) {
            swap(i, minIndex);
            swaps.add(new Pair<>(i, minIndex));
            shiftDown(minIndex);
        }
    }

    private void swap(int i, int j) {
        int temp = data.get(i);
        data.set(i, data.get(j));
        data.set(j, temp);
    }

    public void writeResponse() {
        System.out.println(swaps.size());
        for (Pair<Integer, Integer> swap : swaps) {
            System.out.println(swap.getKey() + " " + swap.getValue());
        }
    }

    public static void main(String[] args) {
        HeapBuilder heapBuilder = new HeapBuilder();
        heapBuilder.readData();
        heapBuilder.generateSwaps();
        heapBuilder.writeResponse();
    }
}

//Generated by Bard